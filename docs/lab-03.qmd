---
title: ESS330 Lab 3
author: 
  - Name: Alex Smilor
    Email: alexws23@colostate.edu
subtitle: Covid Wrangling
format: 
  html:
    self-contained: true
execute:
  echo: true
project:
  type: website
  output-dir: docs
---

```{r}
library(tidyverse)
library(flextable)
library(zoo)
library(tidyr)
library(lubridate)
```
## Question 1: Public Data
Public data serves as an important toolto understanding the big picture, allowing scientists and normal people to access the raw data and use it to map out the trends in that data. This allows us to better understand these incredibly complicated systems and work towards solving important real world problems. However, reliance on public data can also cause issues when that data becomes unavailable, possibly completely ruining some projects and breaking numerous models and applications. 
```{r}
url = "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv"
covid <- read.csv(url)
```

## Question 2: Daily Summary
```{r}
my.date <- as_date("2022-02-01")
my.state <- "Colorado"

coviddailynew <- covid %>% 
  filter(state == my.state) %>% 
  group_by(county) %>% 
  arrange(date) %>% 
  mutate(NewDailyCases = (cases - lag(cases))) %>% 
  mutate(NewDailyDeaths = (deaths - lag(deaths))) %>% 
  ungroup()

#Max Cumulative Cases
coviddailynew %>% 
  filter(date==(my.date)) %>% 
  slice_max(cases, n = 5) %>% 
  arrange(desc(cases)) %>% 
  select(date, county, cases) %>% 
  flextable() %>% 
  set_header_labels(date = "Date", county = "County",cases="Cases") %>% 
  theme_vanilla() %>% 
  add_header_lines("Colorado Counties with the Most Cumulative Covid Cases as of 02/01/2022")

#Max New Cases
coviddailynew %>% 
  filter(date==(my.date)) %>% 
  arrange(desc(NewDailyCases)) %>% 
  select(date, county, NewDailyCases) %>%
  head(5) %>% 
  flextable() %>% 
  set_header_labels(date = "Date", county = "County",NewDailyCases="New Cases") %>% 
  theme_vanilla() %>% 
  add_header_lines("Colorado Counties with the Most New Covid Cases on 02/01/2021")
```

## Question 3: Normalizing Data
```{r}
censusdata <- read_csv("https://www2.census.gov/programs-surveys/popest/datasets/2020-2023/counties/totals/co-est2023-alldata.csv")
print(censusdata)

populationdata <- censusdata %>% 
  mutate(fips = paste0(STATE,COUNTY)) %>% 
  filter(COUNTY != "000") %>% 
  select(contains("2021")|contains("NAME")|contains("fips"))


copopdata <- censusdata %>% 
  mutate(fips = paste0(STATE,COUNTY)) %>% 
  filter(COUNTY != "000") %>% 
  filter(STNAME == "Colorado") %>% 
  select(contains("2021")|contains("NAME")|contains("fips"))

names(populationdata)
dim(populationdata)
nrow(populationdata)
str(populationdata)

range(copopdata$POPESTIMATE2021)
#The smallest county has 741 residents and the largest has 737,287 residents, for a range of: 736546

coviddailynew$fips <- sprintf("%05d", coviddailynew$fips)

covidpop <- inner_join(coviddailynew,copopdata, by = "fips")

covidpop <- covidpop %>% 
  mutate(casespercap = (cases/POPESTIMATE2021),
         deathspercap = (deaths/POPESTIMATE2021),
         newcasespercap = NewDailyCases/POPESTIMATE2021,
         newdeathspercap = NewDailyDeaths/POPESTIMATE2021)

covidpop %>%
  filter(date==(my.date)) %>% 
  slice_max(casespercap, n = 5) %>%
  arrange(desc(casespercap)) %>% 
  select(date, county, casespercap) %>%
  flextable() %>% 
  set_header_labels(date = "Date", county = "County",casespercap="Cases per Capita") %>% 
  theme_vanilla() %>% 
  add_header_lines("Colorado Counties with the Most Cases per Capita on 02/01/2021")

covidpop %>%
  filter(date==(my.date)) %>% 
  slice_max(newcasespercap, n = 5) %>%
  arrange(desc(newcasespercap)) %>% 
  select(date, county, newcasespercap) %>%
  flextable() %>% 
  set_header_labels(date = "Date", county = "County",newcasespercap="New Cases per Capita") %>% 
  theme_vanilla() %>% 
  add_header_lines("Colorado Counties with the Most New Cases per Capita on 02/01/2021")


```

## Question 4: Rolling Thresholds
```{r}
covidpop %>% 
  filter(date > my.date-14) %>% 
  filter(date < my.date) %>% 
  mutate(caseRate = 100000 * NewDailyCases/POPESTIMATE2021) %>% 
  group_by(county) %>% 
  summarise(case=sum(caseRate)) %>% 
  slice_max(case, n=5) %>%
  flextable() %>% 
  set_header_labels(case = "Cases per 100000", county = "County") %>% 
  theme_vanilla() %>% 
  add_header_lines("Five Colorado Counties with the Most New Cases per 100,000 People in the Past 14 days")

covidpop %>% 
  filter(date > my.date-14) %>% 
  filter(date < my.date) %>% 
  mutate(caseRate = 100000 * NewDailyCases/POPESTIMATE2021) %>% 
  group_by(county) %>% 
  summarise(case=sum(caseRate)) %>% 
  filter(case<100) %>% 
  n_distinct()
#62 counties in Colorado reported more than 100 new cases per 100,000 residents over the past 14 days.
```

## Question 5: Death Toll
```{r}
deathprop2021 <- covidpop %>% 
  filter(year(date)==2021) %>% 
  mutate(propDeath = NewDailyDeaths/DEATHS2021) %>% 
  group_by(county) %>% 
  summarise(propDeath=sum(propDeath)) %>% 
  filter(propDeath>0.20)

deathprop2021 %>% 
  ggplot(aes(x=county, y=propDeath)) +
  geom_col() +
  labs(title = "Proportion of Deaths from Covid to Total Deaths in 2021",
       x = "County",
       y = "Proportion of Deaths from Covid",
       subtitle = 'Data Source: NY Times, US Census',
       color = "") +
  theme_minimal() +
  theme(
    plot.background = element_rect(colour = "white"))


```

## Question 6: Multi-state
```{r}
covidState <- covid %>% 
  filter(state %in% c("Colorado", "New York", "Alabama", "Ohio")) %>% 
  group_by(date, state) %>% 
  summarise(cases = sum(cases)) %>% 
  group_by(state) %>% 
  mutate(NewDailyCases = (cases - lag(cases)),
           rollingMean = rollmean(NewDailyCases, k=7, fill = NA, align = "right")) %>% 
  ungroup()

covidState$date <- ymd(covidState$date)

covidState %>% 
  ggplot(aes(x=date, y=rollingMean, group = as.character(state), colour = as.character(state))) +
  geom_line() +
  labs(title = "7-Day Mean of Daily Cases in 4 States",
       x = "Date",
       y = "7-Day Mean of Daily Cases",
       subtitle = 'Data Source: NY Times, US Census',
       color = "") +
  facet_wrap(~state)+
  scale_x_date(breaks = "4 months", date_labels = "%b %Y") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45,
                               vjust = 0.5),
    panel.grid.minor = element_blank(),
    plot.background = element_rect(colour = "white"))

#Prepping Population data to only include date for states
statepop <- censusdata %>% 
  filter(COUNTY == "000") %>% 
  select(contains("2021")|contains("NAME"))
  

#Creating a way to join the two datasets by adding a column with the name "state"
statepop<- statepop %>% 
  rename(state = STNAME)

#Joining census data and multi-state data
covidStatePop <- left_join(covidState,statepop, by = "state")

#Adding per capita new cases
covidStatePop <- covidStatePop %>% 
  mutate(newcasesperpop = NewDailyCases/POPESTIMATE2021) %>% 
  group_by(state) %>% 
  transform(rollingMean = rollmean(newcasesperpop, k=7, fill = NA, align = "right"))

#Plotting New Cases Per Capita
covidStatePop %>% 
  ggplot(aes(x=date, y=rollingMean, group = as.character(state), colour = as.character(state))) +
  geom_line() +
  labs(title = "7-Day Mean of Daily Cases in 4 States",
       x = "Date",
       y = "7-Day Mean of Daily Cases per Capita",
       subtitle = 'Data Source: NY Times, US Census',
       color = "") +
  scale_x_date(breaks = "4 months", date_labels = "%b %Y") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45,
                               vjust = 0.5),
    panel.grid.minor = element_blank(),
    plot.background = element_rect(colour = "white"))

```
Scaling the 7-day rolling average of new covid cases definitely influenced the overall picture of how the states were doing. Originally, New York had appeared to have done worse than the other states, especially during the spike in January 2022. However, when scaled by population, New York did only slightly worse than Ohio and Colorado, with Alabama seeing almost the same proportion of new cases. This graph also makes Alabama and Colorado appear much worse, since by scaling by population, we are able to see that proportionally their number of average new cases was almost as bad as New York and that they had simply appeared better originally due to their relatively small populations.

## Question 7: Space & Time
```{r}
location <- read.csv('https://raw.githubusercontent.com/mikejohnson51/csu-ess-330/refs/heads/main/resources/county-centroids.csv')

spacetime <- inner_join(covid,location,by="fips")

weightedspace <- spacetime %>% 
  group_by(date) %>% 
  summarise(LAT=weighted.mean(LAT,cases),
            LON=weighted.mean(LON,cases),
            cases=sum(cases))

weightedspace$date <- ymd(weightedspace$date)

weightedspace$month <- format(weightedspace$date,"%Y-%m")

weightedspace %>% 
  ggplot(aes(x=LON,y=LAT, size = cases))+
  borders("state", colour = "black")+ 
  geom_point(color = "red", alpha=.25)+
  theme_minimal() +
  theme(
    panel.grid.minor = element_blank(),
    panel.grid.major = element_blank(),
    plot.background = element_rect(colour = "white"))+
  labs(
    x = "Latitude",
    y = "Longitude",
    colour = "Month",
    size = "Cases"
  )

weightedspace %>% 
  ggplot(aes(x=LON,y=LAT, color = month, size = cases))+
  borders("state", colour = "black")+ 
  geom_point()+
  theme_minimal() +
  theme(
    panel.grid.minor = element_blank(),
    panel.grid.major = element_blank(),
    plot.background = element_rect(colour = "white"))+
  labs(
    x = "Latitude",
    y = "Longitude",
    colour = "Month",
    size = "Cases"
  )
```
The first few cases were reported in Washington and therefore the center stayed their at first. However, as the pandemic progressed into the first few months, the weighted center of cases moved towards the center of the country, hovering over Utah, Colorado and Nebraska until approximately May 2020, when it abruptly shifted eastward, with the weighted mean center moving over the southern portion of Ohio. From their, it made its way steadily Southeast, eventually coming to rest over the southern part of Missouri.

##Question 8
Cases show much more variation in the weighted center on any given day, while deaths, interestingly, remain concentrated in slightly west of the center of the US over Colorado. This tells us that while the concentration of cases varied spatially quite significantly, death did not.
```{r}
library(patchwork)

location$fips <- sprintf("%05d", location$fips)

spacetime2 <- inner_join(coviddailynew,location,by="fips")


weighteddeath <- spacetime2 %>% 
  group_by(date) %>%  
  summarise(LAT=weighted.mean(LAT,deaths),
            LON=weighted.mean(LON,deaths),
            deaths=sum(deaths))

weighteddeath$date <- ymd(weighteddeath$date)

weighteddeath$month <- format(weighteddeath$date,"%Y-%m")

deathplot <- weighteddeath %>% 
  ggplot(aes(x=LON,y=LAT, size = deaths))+
  borders("state", colour = "black")+ 
  geom_point(colour = "navy")+
  theme_minimal() +
  theme(
    panel.grid.minor = element_blank(),
    panel.grid.major = element_blank(),
    plot.background = element_rect(colour = "white"))+
  labs(
    x = "Latitude",
    y = "Longitude",
    size = "Deaths"
  )

weighteddaily <- spacetime2 %>% 
  group_by(date) %>%  
  summarise(LAT=weighted.mean(LAT,NewDailyCases),
            LON=weighted.mean(LON,NewDailyCases),
            deaths=sum(NewDailyCases))

weighteddaily$date <- ymd(weighteddaily$date)

weighteddaily$month <- format(weighteddaily$date,"%Y-%m")

caseplot <- weightedspace %>% 
  ggplot(aes(x=LON,y=LAT, size = cases))+
  borders("state", colour = "black")+ 
  geom_point(color = "red")+
  theme_minimal() +
  theme(
    panel.grid.minor = element_blank(),
    panel.grid.major = element_blank(),
    plot.background = element_rect(colour = "white"))+
  labs(
    x = "Latitude",
    y = "Longitude",
    size = "Cases"
  )

caseplot | deathplot
```

